name: "Primary Build" # Name of the workflow

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  pull_request: # Triggers the workflow on pull requests to the main branch
    branches: [ main ]
  push: # Triggers the workflow on pushes to the main branch and tags starting with 'v'
    branches: [ main ]
    tags: [ v* ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token for authentication

jobs:
  build:
    name: Build Project
    strategy:
      fail-fast: false
      matrix:
        java: [ 17, 21, 23 ]
        os: [ ubuntu-24.04, windows-2025 ]
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the source code from the repository
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up the specified Java version
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java }}
          check-latest: true

      # Set up SBT (Simple Build Tool)
      - name: Setup SBT
        uses: sbt/setup-sbt@v1

      # Compile 'chromisery-pos' Module
      - name: Compile 'chromisery-pos' Module
        run: sbt chromisery-pos/compile

      # TODO: Add unit testing tasks

  analyse:
    name: Analyse Project
    strategy:
      fail-fast: false
    runs-on: ubuntu-24.04

    steps:
      # Checkout the source code from the repository
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up the specified Java version
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          check-latest: true

      # Set up SBT (Simple Build Tool)
      - name: Setup SBT
        uses: sbt/setup-sbt@v1

      # Update the Github dependency graph
      - name: Update Dependency Graph
        if: github.ref == 'refs/heads/main'
        uses: scalacenter/sbt-dependency-submission@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          configs-ignore: scala-doc-tool

      # Create GitHub issues for TODO comments
      - name: Scan for TODO Comments
        if: github.ref == 'refs/heads/main'
        uses: Juulsn/todo-issue@v1.1.4
        with:
          autoAssign: false
          keywords: 'TODO:,TODO,FIXME:,FIXME'
          label: "todo"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
